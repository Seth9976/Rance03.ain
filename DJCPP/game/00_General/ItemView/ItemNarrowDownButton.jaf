ItemNarrowDownButton::ItemNarrowDownButton()
{
	this.gameObjectId_ = g_gameObjectManager.addObject(this.update);
}

void ItemNarrowDownButton::init(array@string itemIds, DG_ButtonClickCallback cb)
{
	this.initParts();
	array@bool val[9];
	val.Fill(0, val.Numof(), false);
	val[0] = true;
	int i;
	for (i = 0; i < itemIds.Numof(); ++i)
	{
		int index = getItemFromId(itemIds[i]).getNarrowDownType();
		val[index] = true;
	}
	for (i = 0; i < val.Numof(); ++i)
	{
		if (val[i])
		{
			this.btn_.Realloc(this.btn_.Numof() + 1);
			int index = this.btn_.Numof() - 1;
			this.btn_[index].init("システム／ボタン／幅６０", this.getTypeText(i), "", false);
			this.btn_[index].setClickCallback(cb, i);
			this.btn_[index].setZ(4700);
		}
	}
}

string ItemNarrowDownButton::getTypeText(int type)
{
	switch (type)
	{
	case 0:
		return "全て";
	case 1:
		return "消費";
	case 2:
		return "特殊";
	default:
		return "装備%d" % (type - 2);
	}
	return "";
}

void ItemNarrowDownButton::update()
{
}

void ItemNarrowDownButton::fadeIn(bool val, DG_GeneralCallback onFinish)
{
	this.setPartsShow();
	PartsMotion m;
	if (val)
	{
		m.setMove(-200, 0, 0, 0, 1);
	}
	else
	{
		m.setMove(0, 0, -200, 0, 1);
	}
	this.parent_.runMotion(m, onFinish);
	int i;
	for (i = 0; i < this.btn_.Numof(); ++i)
	{
		array@PartsMotion m[1];
		int x = 20;
		int y = 85 + i * 78;
		if (val)
		{
			m[0].setMove(x - 200, y, x, y, 1);
		}
		else
		{
			m[0].setMove(x, y, x - 200, y, 1);
		}
		this.btn_[i].fadeInCustomized(val, m);
	}
}

void ItemNarrowDownButton::initParts()
{
	this.parts_[0].init("システム／アイテム／絞込み", 0);
	createPartsGroup(this.parent_, this.parts_, 4600);
	this.setPartsPos();
}

void ItemNarrowDownButton::setPartsShow()
{
	int i;
	for (i = 0; i < this.parts_.Numof(); ++i)
	{
		this.parts_[i].setShow(true);
	}
	this.parent_.setShow(true);
}

void ItemNarrowDownButton::setPartsPos()
{
	this.parts_[0].setPos(0.0, 0.0);
}

