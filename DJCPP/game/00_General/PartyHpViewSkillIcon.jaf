PartyHpViewSkillIcon::PartyHpViewSkillIcon()
{
	this.gameObjectId_ = g_gameObjectManager.addObject(this.update);
}

void PartyHpViewSkillIcon::init(int index)
{
	this.index_ = index;
	this.baseX_ = 16 + this.index_ * 118;
	this.baseY_ = 556 + this.index_ * 12;
	this.initParts();
}

void PartyHpViewSkillIcon::update()
{
}

void PartyHpViewSkillIcon::fadeIn(bool val, unknown_delegate onFinish)
{
	this.setPartsShow();
	if (val)
	{
		array@PartsMotion m[2];
		m[0].setAlpha(255, 255, 0);
		m[0].setTime(this.index_ * 30);
		m[0].setMove(this.baseX_, this.baseY_ + 200, this.baseX_, this.baseY_ + 200, 1);
		m[1].setTime(200);
		m[1].setMove(this.baseX_, this.baseY_ + 200, this.baseX_, this.baseY_, 1);
		this.parent_.runMotionArray(m, NULL);
	}
	else
	{
		PartsMotion m;
		m.setTime(60);
		m.setMove(this.baseX_, this.baseY_, this.baseX_, this.baseY_ + 200, 1);
		m.setAlpha(255, 0, 0);
		this.parent_.runMotion(m, NULL);
	}
}

void PartyHpViewSkillIcon::initParts()
{
	string pId = g_party.getPlayerId(this.index_);
	this.parts_[0].init("システム／スキル／下地／%s" % getPlayerFromId(pId).getShortName(), 0);
	this.parts_[1].init("システム／編成／クールタイム", 0);
	this.parts_[2].initAsNumber("システム／数字／幅２３／白フチ", NULL);
	PlayerSkill skill;
	skill = getPlayerSkillFromId(g_party.getAttackSkillId(this.index_));
	this.parts_[3].init(skill.getIconImageName(), 0);
	this.parts_[0].setCgRange((this.parts_[0].getWidth() / 4) * 3, 0, this.parts_[0].getWidth() / 4, this.parts_[0].getHeight());
	this.parts_[3].setCgRange((this.parts_[3].getWidth() / 5) * 4, 0, this.parts_[3].getWidth() / 5, this.parts_[3].getHeight());
	int v = 200;
	this.parts_[1].setMultiColorValue(v, v, v);
	this.parts_[2].setMultiColorValue(v, v, v);
	this.parts_[3].setMultiColorValue(v, v, v);
	createPartsGroup(this.parent_, this.parts_, 5100);
	this.setPartsPos();
}

void PartyHpViewSkillIcon::setPartsShow()
{
	this.parts_[0].setShow(true);
	this.parts_[3].setShow(true);
	this.updateCoolTime();
	this.parent_.setShow(true);
}

void PartyHpViewSkillIcon::setPartsPos()
{
	this.parts_[0].setPos(0.0, 0.0);
	this.parts_[1].setPos(82.0, 0.0);
	this.parts_[2].setPos(100.0, 17.0);
	this.parts_[2].setOrigin(5);
	this.parts_[3].setOrigin(8);
	this.parts_[3].setPos(59.0, 19.0);
	this.parent_.setPos(this.baseX_, this.baseY_);
}

void PartyHpViewSkillIcon::updateCoolTime()
{
	int ct = getCoolTimeFromSkillId(g_party.getAttackSkillId(this.index_));
	this.parts_[1].setShow(ct > 0);
	this.parts_[2].setShow(ct > 0);
	this.parts_[2].setNumber(ct);
}

