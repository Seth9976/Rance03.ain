AttackSkillInfomation::AttackSkillInfomation()
{
	this.gameObjectId_ = g_gameObjectManager.addObject(this.update);
}

void AttackSkillInfomation::init(string skillId)
{
	this.skillId_ = skillId;
	if (getPlayerSkillFromId(this.skillId_) !== NULL)
	{
		this.initParts();
	}
}

void AttackSkillInfomation::update()
{
}

void AttackSkillInfomation::initParts()
{
	ref PlayerSkill s = getPlayerSkillFromId(this.skillId_);
	this.parts_[0].init("システム／編成／スキル説明", 0);
	array@string desc;
	splitToken(desc, s.getDesc(), "|");
	desc.Realloc(3);
	int i;
	for (i = 0; i < desc.Numof(); ++i)
	{
		this.parts_[1 + i].initAsText(desc[i], 20, false, 256, 31, 4, 4);
	}
	this.parts_[4].initAsText(s.getDesc2(), 20, false, 256, 31, 4, 4);
	this.parts_[5].initAsNumber("システム／数字／幅１３／赤", NULL);
	this.parts_[5].setNumber(s.getCoolTime());
	createPartsGroup(this.parent_, this.parts_, 4400);
	if (this.parentPartsNumber_ != 0)
	{
		this.parent_.setParent(this.parentPartsNumber_);
		this.parent_.setZ(0.0);
	}
	this.setPartsPos();
	this.setPartsShow();
}

void AttackSkillInfomation::setPartsShow()
{
	int i;
	for (i = 0; i < this.parts_.Numof(); ++i)
	{
		this.parts_[i].setShow(true);
	}
	this.parent_.setShow(true);
}

void AttackSkillInfomation::setPartsPos()
{
	int i;
	for (i = 0; i < 3; ++i)
	{
		this.parts_[1 + i].setOrigin(1);
		this.parts_[1 + i].setPos(35.0, 33 + i * 17);
	}
	this.parts_[4].setOrigin(2);
	this.parts_[4].setPos(118.0, 92.0);
	this.parts_[5].setPos(258.0, 91.0);
	this.parts_[5].setOrigin(2);
	for (i = 0; i < this.parts_.Numof(); ++i)
	{
		this.parts_[i].changeOrigin(4);
	}
}

void AttackSkillInfomation::setViewValue(float val)
{
	float v = Math.MinF(1.0, Math.MaxF(-1.0, val * 1.3));
	v = Math.MaxF(Math.AbsF(v) - 0.25, 0.0) * 1.333;
	this.parts_[0].setXScaling((1 - Math.AbsF(v)) * 100.0);
	this.parts_[0].setAlpha((1 - Math.AbsF(v)) * 255.0);
	int i;
	for (i = 1; i < this.parts_.Numof(); ++i)
	{
		float v2 = Math.MinF(1.0, Math.MaxF(-1.0, val * 4.0));
		this.parts_[i].setAlpha((1 - Math.AbsF(v2)) * 255.0);
	}
}

void AttackSkillInfomation::setPos(int x, int y)
{
	this.parent_.setPos(x, y);
}

void AttackSkillInfomation::fadeIn(bool val, unknown_delegate onFinish)
{
	PartsMotion m;
	m = getStandardMotion(val ? 0 : 1);
	if (!val)
	{
		m.setTime(150);
	}
	this.parent_.runMotion(m, NULL);
}

void AttackSkillInfomation::setShow(bool val)
{
	this.parent_.setAlpha(val ? 255 : 0);
}

void AttackSkillInfomation::setParent(int parentPartsNumber)
{
	this.parentPartsNumber_ = parentPartsNumber;
	if (this.parent_.isInitialized())
	{
		this.parent_.setParent(this.parentPartsNumber_);
		this.parent_.setZ(0.0);
	}
}

