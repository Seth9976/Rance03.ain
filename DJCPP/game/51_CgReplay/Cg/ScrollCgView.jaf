ScrollCgView::ScrollCgView()
{
	this.gameObjectId_ = g_gameObjectManager.addObject(this.update);
}

void ScrollCgView::init(array@string imageName)
{
	this.scrollWidth_ = 250.0;
	this.pageCount_ = imageName.Numof();
	this.scroller_.init(0, 0, 1024, 768, this.scrollWidth_ * (this.pageCount_ - 1), this.scrollWidth_, false);
	this.scroller_.setScrollType(200, 7);
	this.initParts(imageName);
}

void ScrollCgView::initParts(array@string imageName)
{
	this.parts_.Alloc(imageName.Numof());
	int i;
	for (i = 0; i < imageName.Numof(); ++i)
	{
		this.parts_[i].init(imageName[i], 0);
		this.parts_[i].setZ(0.0);
	}
	createPartsGroup(this.parent_, this.parts_, 10000);
	this.setPartsPos();
	this.setPartsShow();
}

void ScrollCgView::setPartsShow()
{
	int i;
	for (i = 0; i < this.parts_.Numof(); ++i)
	{
		this.parts_[i].setShow(true);
	}
	this.parent_.setShow(true);
}

void ScrollCgView::setPartsPos()
{
	int i;
	for (i = 0; i < this.parts_.Numof(); ++i)
	{
		this.parts_[i].setPos(1024 * i, 0.0);
	}
}

void ScrollCgView::update()
{
	this.parent_.setPos((-this.scroller_.getCurrentPosition() / this.scrollWidth_) * 1024.0, 0.0);
}

void ScrollCgView::fadeIn(bool val)
{
	this.parent_.runMotion(getStandardMotion(val ? 0 : 1), NULL);
}

float ScrollCgView::getScrollPosition()
{
	return this.scroller_.getCurrentPosition() / this.scrollWidth_;
}

int ScrollCgView::getPageCount()
{
	return this.pageCount_;
}

void ScrollCgView::scroll(bool isBackward)
{
	this.scroller_.forceWheel(isBackward);
}

