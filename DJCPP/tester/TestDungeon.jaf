void test_Scene_Dungeon()
{
	openDungeon(g_dungeon[0].getId(), 0, 3);
}

void test_Dungeon_CardViewMove()
{
	array@DungeonCard card[45];
	array@DungeonCardView view[45];
	int i;
	for (i = 0; i < card.Numof(); ++i)
	{
		card[i].init(g_cardInfomation[i % 4].getId(), 0);
	}
	for (i = 0; i < view.Numof(); ++i)
	{
		view[i].init(card[i], NULL, 0, 0, 0, 0);
		view[i].setLocalPos(i % 9 - 4, i / 9);
	}
	float y = 8.0;
	while (!g_mouse.isClick(1))
	{
		if (g_mouse.isClick(0))
		{
			y = 8.0;
		}
		y -= 0.05;
		for (i = 0; i < view.Numof(); ++i)
		{
			view[i].init(card[i], NULL, 0, 0, 0, 0);
			view[i].setLocalPos(i % 9 - 4, i / 9 + y);
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_Dungeon_CardViewFlip()
{
	array@DungeonCard card[5];
	array@DungeonCardView view[5];
	int i;
	for (i = 0; i < card.Numof(); ++i)
	{
		card[i].init(g_cardInfomation[i % 4].getId(), i % 3);
	}
	for (i = 0; i < view.Numof(); ++i)
	{
		view[i].init(card[i], NULL, 0, 0, 0, 0);
		view[i].setLocalPos(i - 1, 0.0);
	}
	float y = 8.0;
	while (!g_mouse.isClick(1))
	{
		if (g_mouse.isClick(0))
		{
			for (i = 0; i < card.Numof(); ++i)
			{
				card[i].openCard();
			}
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_Dungeon_CardViewFadeIn()
{
	array@DungeonCard card[5];
	array@DungeonCardView view[5];
	int i;
	for (i = 0; i < card.Numof(); ++i)
	{
		card[i].init(g_cardInfomation[i % 4].getId(), i % 3);
	}
	for (i = 0; i < view.Numof(); ++i)
	{
		view[i].init(card[i], NULL, 0, 0, 0, 0);
		view[i].setLocalPos(i - 1, 0.0);
		view[i].fadeIn(true, NULL);
	}
	float y = 8.0;
	while (!g_mouse.isClick(1))
	{
		if (g_mouse.isClick(0))
		{
			for (i = 0; i < view.Numof(); ++i)
			{
				view[i].fadeIn(true, NULL);
			}
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_Dungeon_Infomation()
{
	string key = g_dungeon[0].getId();
	Dungeon d;
	d.init(key);
	int i;
	for (i = 0; i < d.getDepth(); ++i)
	{
		ref DungeonLine line = d.getDungeonLine(i);
		line.debugOut();
	}
}

void test_Dungeon_CamraMotion()
{
	array@DungeonCard card[45];
	array@DungeonCardView view[45];
	int i;
	for (i = 0; i < card.Numof(); ++i)
	{
		card[i].init(g_cardInfomation[i % 4].getId(), 0);
	}
	for (i = 0; i < view.Numof(); ++i)
	{
		view[i].init(card[i], NULL, 0, 0, 0, 0);
		view[i].setLocalPos(i % 9 - 4, i / 9);
	}
	float camera;
	while (!g_mouse.isClick(1))
	{
		if (g_keyboard.isDown(37))
		{
			camera += 0.03;
		}
		else if (g_keyboard.isDown(39))
		{
			camera -= 0.03;
		}
		int i;
		for (i = 0; i < view.Numof(); ++i)
		{
			view[i].setCameraPos(camera);
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_Dungeon_CardInfomation()
{
	int i;
	for (i = 0; i < g_cardInfomation.Numof(); ++i)
	{
		string n = "%s|%s|%s|%s|%d|%d|%s" % g_cardInfomation[i].getId() % g_cardInfomation[i].getCaption() % g_cardInfomation[i].getImageName() % g_cardInfomation[i].getEventCallback() % g_cardInfomation[i].getFadeOutType() % g_cardInfomation[i].getChangeType() % g_cardInfomation[i].getClickableJudgeCallback();
		pass(n);
	}
}

void test_Dungeon_Line()
{
	string key = "DUNG002";
	g_testDungeonFront = 0;
	g_testDungeonPlayerX = 0;
	g_testDungeonLine.Alloc(7);
	g_testDungeon.init(key);
	int i;
	for (i = 0; i < g_testDungeonLine.Numof(); ++i)
	{
		g_testDungeonLine[i].init(g_testDungeon.getDungeonLine(i), g_testDungeonPlayerX, i, 0, 0, 0);
		g_testDungeonLine[i].setOnClickCallback("test_Dungeon_LineClickCallback");
	}
	while (!g_mouse.isClick(1))
	{
		if (g_keyboard.isPress(37))
		{
			int i;
			for (i = 0; i < g_testDungeon.getDepth(); ++i)
			{
				int w = g_testDungeon.getDungeonLine(i).getWidth();
				int j;
				for (j = 0; j < w; ++j)
				{
					g_testDungeon.getDungeonLine(i).getDungeonCard(j).openCard();
				}
			}
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
	g_testDungeonLine.Free();
}

void test_Dungeon_LineOnFinishMove()
{
	++g_finishEventCount2;
	if (g_testDungeonLine.Numof() == g_finishEventCount2)
	{
		g_finishEventCount2 = 0;
		++g_testDungeonFront;
		int count = g_testDungeonLine.Numof();
		g_testDungeonLine.Erase(0);
		g_testDungeonLine.Realloc(count);
		g_testDungeonLine[count - 1].init(g_testDungeon.getDungeonLine(g_testDungeonFront + count), g_testDungeonPlayerX, count - 1, 0, 0, 0);
		g_testDungeonLine[count - 1].setOnClickCallback("test_Dungeon_LineClickCallback");
	}
}

void test_Dungeon_LineOnFinishMoveSideways()
{
	++g_finishEventCount1;
	if (g_testDungeonLine.Numof() == g_finishEventCount1)
	{
		g_finishEventCount1 = 0;
		test_Dungeon_CardMoveForward();
	}
}

void test_ExLoading_Dungeon()
{
	int i;
	for (i = 0; i < g_dungeon.Numof(); ++i)
	{
		string s = "%s|%s|%s" % g_dungeon[i].getId() % g_dungeon[i].getCaption() % g_dungeon[i].getDefaultCardId();
		pass(s);
	}
}

void test_ExLoading_CardInfomation()
{
	int i;
	for (i = 0; i < g_cardInfomation.Numof(); ++i)
	{
		string s = "id:%s|caption:%s|imagename:%s|eventCallback:%s|minimapIcon:%s|foType:%d|changeType:%d|judgecallback:%s" % g_cardInfomation[i].getId() % g_cardInfomation[i].getCaption() % g_cardInfomation[i].getImageName() % g_cardInfomation[i].getEventCallback() % g_cardInfomation[i].getMinimapIconImageName() % g_cardInfomation[i].getFadeOutType() % g_cardInfomation[i].getChangeType() % g_cardInfomation[i].getClickableJudgeCallback();
		pass(s);
	}
}

void test_Dungeon_CardMoveForward()
{
	int i;
	for (i = 0; i < g_testDungeonLine.Numof(); ++i)
	{
		g_testDungeonLine[i].moveForward("test_Dungeon_LineOnFinishMove");
	}
}

void test_Dungeon_LineClickCallback(ref DungeonCard card, int xPos, int yPos)
{
	if (g_testDungeonPlayerX != xPos)
	{
		g_testDungeonPlayerX = xPos;
		int i;
		for (i = 0; i < g_testDungeonLine.Numof(); ++i)
		{
			g_testDungeonLine[i].moveSideways(g_testDungeonPlayerX, "test_Dungeon_LineOnFinishMoveSideways");
		}
	}
	else
	{
		test_Dungeon_CardMoveForward();
	}
}

void test_Party_HpView()
{
	test_Player_Init();
	test_Party_Organize();
	PartyHpView view;
	view.init(5200);
	view.fadeIn(true);
	while (!g_mouse.isClick(1))
	{
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_Dungeon_Minimap()
{
	DungeonMiniMap mm;
	mm.init(g_dungeon[0].getId());
	int ypos;
	int xpos;
	while (!g_mouse.isClick(1))
	{
		if (g_mouse.isClick(0))
		{
			++ypos;
			mm.setPlayerPos(xpos, ypos);
		}
		if (g_keyboard.isPress(37))
		{
			--xpos;
			mm.setPlayerPos(xpos, ypos);
		}
		else if (g_keyboard.isPress(39))
		{
			++xpos;
			mm.setPlayerPos(xpos, ypos);
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

void test_testDungeonBackground()
{
	DungeonBackground b;
	b.init(g_dungeon[0].getId());
	while (true)
	{
		if (g_keyboard.isPress(90))
		{
			b.fadeIn(true, NULL);
		}
		if (g_keyboard.isPress(88))
		{
			b.fadeIn(false, NULL);
		}
		g_gameObjectManager.update();
		g_frameManager.updateFrame();
	}
}

