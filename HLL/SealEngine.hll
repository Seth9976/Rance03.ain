int CreatePlugin(void);
bool ReleasePlugin(int nHandle);
int GetNumofPlugin(void);
bool IsExistPlugin(int PluginNumber);
bool BindPlugin(int nHandle, int nSprite);
bool UnbindPlugin(int nHandle);
bool BuildModel(int nPlugin, int nPassTime);
void SetMagSpeed(int MagSpeed);
int CreateInstance(int nPlugin);
bool ReleaseInstance(int nPlugin, int nInstance);
bool LoadInstance(int nPlugin, int nInstance, string pIName);
bool SaveInstance(int PluginNumber, int InstanceNumber, string FileName);
bool IsExistInstanceData(int PluginNumber, int InstanceNumber, string FileName);
bool GetInstanceName(int PluginNumber, int InstanceNumber, ref string pIName);
bool SetInstanceType(int nPlugin, int nInstance, int nType);
bool SetInstancePos(int nPlugin, int nInstance, float fX, float fY, float fZ);
bool GetInstancePos(int PluginNumber, int InstanceNumber, ref float pX, ref float pY, ref float pZ);
bool SetInstanceVector(int nPlugin, int nInstance, float fX, float fY, float fZ);
bool SetInstanceAngle(int nPlugin, int nInstance, float fAngle);
bool SetInstanceAngleP(int nPlugin, int nInstance, float fAngleP);
bool SetInstanceAngleB(int nPlugin, int nInstance, float fAngleB);
bool GetInstanceAngle(int PluginNumber, int InstanceNumber, ref float pAngle);
bool GetInstanceAngleP(int PluginNumber, int InstanceNumber, ref float pAngleP);
bool GetInstanceAngleB(int PluginNumber, int InstanceNumber, ref float pAngleB);
float GetInstanceScaleX(int nPlugin, int nInstance);
float GetInstanceScaleY(int nPlugin, int nInstance);
float GetInstanceScaleZ(int nPlugin, int nInstance);
bool SetInstanceScaleX(int nPlugin, int nInstance, float fScaleX);
bool SetInstanceScaleY(int nPlugin, int nInstance, float fScaleY);
bool SetInstanceScaleZ(int nPlugin, int nInstance, float fScaleZ);
bool SetInstanceZBias(int nPlugin, int nInstance, float fZBias);
float GetInstanceZBias(int nPlugin, int nInstance);
bool SetInstanceVertexPos(int nPlugin, int nInstance, int nIndex, float fX, float fY, float fZ);
bool SetInstanceVertexUV(int PluginNumber, int InstanceNumber, int Index, float U, float V);
bool SetInstanceDiffuse(int nPlugin, int nInstance, float fR, float fG, float fB);
bool GetInstanceDiffuse(int PluginNumber, int InstanceNumber, ref float pR, ref float pG, ref float pB);
bool SetInstanceAmbient(int nPlugin, int nInstance, float fR, float fG, float fB);
bool GetInstanceAmbient(int PluginNumber, int InstanceNumber, ref float pR, ref float pG, ref float pB);
bool SetInstanceGlobeDiffuse(int nPlugin, int nInstance, float fR, float fG, float fB);
bool SetInstanceSpecular(int nPlugin, int nInstance, float fSpecular);
bool SetInstanceAlpha(int nPlugin, int nInstance, float fAlpha);
bool GetInstanceAlpha(int PluginNumber, int InstanceNumber, ref float Alpha);
bool SetInstanceGrayscaleRate(int PluginNumber, int InstanceNumber, float GrayscaleRate);
bool GetInstanceGrayscaleRate(int PluginNumber, int InstanceNumber, ref float GrayscaleRate);
bool SetInstanceAttenuationNear(int nPlugin, int nInstance, float fNear);
bool SetInstanceAttenuationFar(int nPlugin, int nInstance, float fFar);
bool SetInstanceDraw(int nPlugin, int nInstance, bool bFlag);
bool SetInstanceDrawShadow(int nPlugin, int nInstance, bool bFlag);
bool SetInstanceDrawBackShadow(int nPlugin, int nInstance, bool bFlag);
bool SetInstanceDrawMakeShadow(int nPlugin, int nInstance, bool bFlag);
bool SetInstanceDrawBump(int nPlugin, int nInstance, bool bFlag);
bool GetInstanceDraw(int nPlugin, int nInstance);
bool GetInstanceDrawShadow(int nPlugin, int nInstance);
bool GetInstanceDrawBackShadow(int nPlugin, int nInstance);
bool GetInstanceDrawMakeShadow(int nPlugin, int nInstance);
bool GetInstanceDrawBump(int nPlugin, int nInstance);
bool SetInstanceDrawParam(int PluginNumber, int InstanceNumber, int DrawParam, int Value);
bool GetInstanceDrawParam(int PluginNumber, int InstanceNumber, int DrawParam, ref int Value);
bool LoadInstanceMotion(int nPlugin, int nInstance, string Name);
bool IsExistInstanceMotion(int PluginNumber, int InstanceNumber, string MotionName);
int GetInstanceMotionState(int nPlugin, int nInstance);
float GetInstanceMotionFrame(int nPlugin, int nInstance);
bool SetInstanceMotionState(int nPlugin, int nInstance, int nState);
bool SetInstanceMotionFrame(int nPlugin, int nInstance, float fFrame);
bool SetInstanceMotionFrameRange(int nPlugin, int nInstance, float fBeginFrame, float fEndFrame);
bool SetInstanceMotionLoopFrameRange(int nPlugin, int nInstance, float fBeginFrame, float fEndFrame);
bool LoadInstanceNextMotion(int nPlugin, int nInstance, string Name);
bool SetInstanceNextMotionState(int nPlugin, int nInstance, int nState);
bool SetInstanceNextMotionFrame(int nPlugin, int nInstance, float fFrame);
bool SetInstanceNextMotionFrameRange(int nPlugin, int nInstance, float fBeginFrame, float fEndFrame);
bool SetInstanceNextMotionLoopFrameRange(int nPlugin, int nInstance, float fBeginFrame, float fEndFrame);
bool SetInstanceMotionBlendRate(int nPlugin, int nInstance, float fRate);
bool SetInstanceMotionBlend(int nPlugin, int nInstance, bool bMotionBlend);
bool IsInstanceMotionBlend(int nPlugin, int nInstance);
bool GetInstanceMotionBlendPutTime(int nPlugin, int nInstance);
bool SetInstanceMotionBlendPutTime(int nPlugin, int nInstance, bool bFlag);
bool SwapInstanceMotion(int nPlugin, int nInstance);
bool FreeInstanceNextMotion(int nPlugin, int nInstance);
int GetInstanceNumofMaterial(int nPlugin, int nInstance);
bool GetInstanceMaterialName(int nPlugin, int nInstance, int nNum, ref string pIName);
float GetInstanceMaterialParam(int nPlugin, int nInstance, int nMaterial, int nType);
bool SetInstanceMaterialParam(int nPlugin, int nInstance, int nMaterial, int nType, float fParam);
bool SaveInstanceAddMaterialData(int nPlugin, int nInstance);
bool SetInstancePointPos(int nPlugin, int nInstance, int nIndex, float fX, float fY, float fZ);
bool GetInstancePointPos(int nPlugin, int nInstance, int nIndex, ref float pfX, ref float pfY, ref float pfZ);
bool GetInstanceColumnPos(int nPlugin, int nInstance, ref float fX, ref float fY, ref float fZ);
float GetInstanceColumnHeight(int nPlugin, int nInstance);
float GetInstanceColumnRadius(int nPlugin, int nInstance);
float GetInstanceColumnAngle(int nPlugin, int nInstance);
float GetInstanceColumnAngleP(int nPlugin, int nInstance);
float GetInstanceColumnAngleB(int nPlugin, int nInstance);
bool SetInstanceColumnPos(int nPlugin, int nInstance, float fX, float fY, float fZ);
bool SetInstanceColumnHeight(int nPlugin, int nInstance, float fHeight);
bool SetInstanceColumnRadius(int nPlugin, int nInstance, float fRadius);
bool SetInstanceColumnAngle(int nPlugin, int nInstance, float fAngle);
bool SetInstanceColumnAngleP(int nPlugin, int nInstance, float fAngleP);
bool SetInstanceColumnAngleB(int nPlugin, int nInstance, float fAngleB);
bool GetInstanceDrawColumn(int nPlugin, int nInstance);
bool SetInstanceDrawColumn(int nPlugin, int nInstance, bool bDraw);
bool SetInstanceTarget(int nPlugin, int nInstance, int nIndex, int nTarget);
int GetInstanceTarget(int nPlugin, int nInstance, int nIndex);
float GetInstanceFPS(int nPlugin, int nInstance);
bool SetInstanceFPS(int nPlugin, int nInstance, float fFPS);
int GetInstanceNumofBone(int PluginNumber, int InstanceNumber);
bool GetInstanceBoneName(int PluginNumber, int InstanceNumber, int BoneIndex, ref string pIName);
bool GetInstanceBoneParentIndex(int PluginNumber, int InstanceNumber, int BoneIndex, ref int pParentBoneIndex);
int GetInstanceBoneIndex(int nPlugin, int nInstance, string pIName);
bool TransInstanceLocalPosToWorldPosByBone(int nPlugin, int nInstance, int nBone, float fOffsetX, float fOffsetY, float fOffsetZ, ref float pfX, ref float pfY, ref float pfZ);
bool SaveBoneFile(int PluginNumber, int InstanceNumber);
bool IsBoneCanIK(int PluginNumber, int InstanceNumber, int BoneIndex);
bool SetBoneCanIK(int PluginNumber, int InstanceNumber, int BoneIndex, bool CanIK);
bool GetBoneEulerAngle(int PluginNumber, int InstanceNumber, int BoneIndex, ref float pEulerAngleP, ref float pEulerAngleH, ref float pEulerAngleB);
bool GetBoneMinEulerAngle(int PluginNumber, int InstanceNumber, int BoneIndex, ref float pEulerAngleP, ref float pEulerAngleH, ref float pEulerAngleB);
bool GetBoneMaxEulerAngle(int PluginNumber, int InstanceNumber, int BoneIndex, ref float pEulerAngleP, ref float pEulerAngleH, ref float pEulerAngleB);
bool SetBoneMinEulerAngle(int PluginNumber, int InstanceNumber, int BoneIndex, float EulerAngleP, float EulerAngleH, float EulerAngleB);
bool SetBoneMaxEulerAngle(int PluginNumber, int InstanceNumber, int BoneIndex, float EulerAngleP, float EulerAngleH, float EulerAngleB);
bool SetBoneMass(int PluginNumber, int InstanceNumber, int BoneIndex, float Mass);
bool SetBoneAirResistance(int PluginNumber, int InstanceNumber, int BoneIndex, float AirResistance);
bool SetBoneRestitutionCoefficient(int PluginNumber, int InstanceNumber, int BoneIndex, float RestitutionCoefficient);
float GetBoneMass(int PluginNumber, int InstanceNumber, int BoneIndex);
float GetBoneAirResistance(int PluginNumber, int InstanceNumber, int BoneIndex);
float GetBoneRestitutionCoefficient(int PluginNumber, int InstanceNumber, int BoneIndex);
int GetNumofBoneCollisionShapeList(int PluginNumber, int InstanceNumber);
int GetBoneCollisionShapeType(int PluginNumber, int InstanceNumber, int Index);
bool GetBoneCollisionShapePoint(int PluginNumber, int InstanceNumber, int Index, ref float pX, ref float pY, ref float pZ);
bool GetBoneCollisionShapePoint2(int PluginNumber, int InstanceNumber, int Index, ref float pX, ref float pY, ref float pZ);
float GetBoneCollisionShapeRadius(int PluginNumber, int InstanceNumber, int Index);
int GetBoneCollisionShapeLinkedBoneIndex(int PluginNumber, int InstanceNumber, int Index);
bool SetBoneCollisionShapeType(int PluginNumber, int InstanceNumber, int Index, int Type);
bool SetBoneCollisionShapePoint(int PluginNumber, int InstanceNumber, int Index, float X, float Y, float Z);
bool SetBoneCollisionShapePoint2(int PluginNumber, int InstanceNumber, int Index, float X, float Y, float Z);
bool SetBoneCollisionShapeRadius(int PluginNumber, int InstanceNumber, int Index, float Radius);
bool SetBoneCollisionShapeLinkedBoneIndex(int PluginNumber, int InstanceNumber, int Index, int BoneIndex);
bool AddBoneCollisionShape(int PluginNumber, int InstanceNumber);
bool EraseBoneCollisionShape(int PluginNumber, int InstanceNumber, int Index);
int GetInstanceNumofPolygon(int nPlugin, int nInstance);
int GetInstanceNumofVertex(int PluginNumber, int InstanceNumber);
int GetInstanceNumofNormal(int PluginNumber, int InstanceNumber);
int GetInstanceNumofMesh(int PluginNumber, int InstanceNumber);
bool GetInstanceMeshName(int PluginNumber, int InstanceNumber, int MeshNumber, ref string pIName);
int GetInstanceMeshMaterialIndex(int PluginNumber, int InstanceNumber, int MeshNumber);
int GetInstanceMeshMaterialID(int PluginNumber, int InstanceNumber, int MeshNumber);
int GetInstanceMeshNumofPolygon(int PluginNumber, int InstanceNumber, int MeshNumber);
bool IsInstanceMeshAlphaBlending(int PluginNumber, int InstanceNumber, int MeshNumber);
int GetInstanceTextureMemorySize(int nPlugin, int nInstance);
void GetInstanceInfoText(int nPlugin, int nInstance, ref string pIText);
void GetInstanceMaterialInfoText(int nPlugin, int nInstance, ref string pIText);
bool GetInstanceAABB(int nPlugin, int nInstance, ref float MinX, ref float MinY, ref float MinZ, ref float MaxX, ref float MaxY, ref float MaxZ);
bool CalcInstanceHeightDetection(int nPlugin, int nInstance, float fX, float fZ, ref float Height);
bool ClearLineList(int PluginNumber, int InstanceNumber);
bool AddLineList(int PluginNumber, int InstanceNumber, float X0, float Y0, float Z0, int Color0, float X1, float Y1, float Z1, int Color1);
float GetInstanceSoftFogEdgeLength(int nPlugin, int nInstance);
bool SetInstanceSoftFogEdgeLength(int nPlugin, int nInstance, float fLength);
float GetInstanceShadowVolumeBoneRadius(int nPlugin, int nInstance);
bool SetInstanceShadowVolumeBoneRadius(int nPlugin, int nInstance, float fRadius);
bool SetInstanceCircleShadowRadius(int PluginNumber, int InstanceNumber, float CircleShadowRadius);
float GetInstanceCircleShadowRadius(int PluginNumber, int InstanceNumber);
bool SetInstanceMeshShow(int PluginNumber, int InstanceNumber, string pIMeshName, bool Show);
bool LoadInstanceLightParam(int PluginNumber, int InstanceNumber);
bool StoreInstanceLightParam(int PluginNumber, int InstanceNumber);
bool SetInstanceUseMagSpeed(int PluginNumber, int InstanceNumber, bool UseMagSpeed);
bool IsInstanceUseMagSpeed(int PluginNumber, int InstanceNumber);
bool GetInstanceDebugDrawShadowVolume(int nPlugin, int nInstance);
bool SetInstanceDebugDrawShadowVolume(int nPlugin, int nInstance, bool bFlag);
bool CreateInstanceDebugBoneList(int PluginNumber, int InstanceNumber, int BoneInstanceNumber, int OnCursorIndex, int SelectedIndex);
bool CreateInstanceDebugBoneCollision(int PluginNumber, int InstanceNumber, int BoneInstanceNumber, int OnCursorIndex, int SelectedIndex);
bool SaveEffect(int nPlugin, int nInstance);
bool SaveEffectAs(int nPlugin, int nInstance, string FileName);
bool GetEffectFrameRange(int nPlugin, int nInstance, ref int pnBeginFrame, ref int pnEndFrame);
bool SetCameraPos(int nPlugin, float fX, float fY, float fZ);
bool SetCameraAngle(int nPlugin, float fAngle);
bool SetCameraAngleP(int nPlugin, float fAngleP);
bool SetCameraAngleB(int nPlugin, float fAngleB);
bool GetCameraPos(int PluginNumber, ref float X, ref float Y, ref float Z);
bool GetCameraAngle(int PluginNumber, ref float Angle);
bool GetCameraAngleP(int PluginNumber, ref float AngleP);
bool GetCameraAngleB(int PluginNumber, ref float AngleB);
bool GetCameraXVector(int PluginNumber, ref float X, ref float Y, ref float Z);
bool GetCameraYVector(int PluginNumber, ref float X, ref float Y, ref float Z);
bool GetCameraZVector(int PluginNumber, ref float X, ref float Y, ref float Z);
bool SetDrawDOF(int PluginNumber, bool DrawDOF);
bool SetDOF_L(int PluginNumber, float DOF_L);
bool SetDOF_F(int PluginNumber, float DOF_F);
bool SetDOF_f(int PluginNumber, float DOF_f);
bool GetDrawDOF(int PluginNumber, ref bool DrawDOF);
bool GetDOF_L(int PluginNumber, ref float DOF_L);
bool GetDOF_F(int PluginNumber, ref float DOF_F);
bool GetDOF_f(int PluginNumber, ref float DOF_f);
bool SetShadowLightVector(int PluginNumber, float X, float Y, float Z);
bool GetShadowLightVector(int PluginNumber, ref float X, ref float Y, ref float Z);
bool SetShadowRate(int PluginNumber, float Rate);
float GetShadowRate(int PluginNumber);
float GetShadowBias(int nPlugin, int nNum);
float GetShadowTargetDistance(int nPlugin, int nNum);
int GetShadowMapResolutionLevel(int nPlugin);
float GetShadowSplitDepth(int nPlugin, int nNum);
bool SetShadowMapType(int nPlugin, int nType);
bool SetShadowMapLightLookPos(int nPlugin, float fX, float fY, float fZ);
bool SetShadowMapLightDir(int nPlugin, float fX, float fY, float fZ);
bool SetShadowBox(int nPlugin, float fX, float fY, float fZ, float fSizeX, float fSizeY, float fSizeZ);
bool SetShadowBias(int nPlugin, int nNum, float fShadowBias);
bool SetShadowSlopeBias(int nPlugin, float fShadowSlopeBias);
bool SetShadowFilterMag(int nPlugin, float fShadowFilterMag);
bool SetShadowTargetDistance(int nPlugin, int nNum, float fDistance);
bool SetShadowMapResolutionLevel(int nPlugin, int nLevel);
bool SetShadowSplitDepth(int nPlugin, int nNum, float fDepth);
bool SetFogType(int nPlugin, int nType);
bool SetFogNear(int nPlugin, float fNear);
bool SetFogFar(int nPlugin, float fFar);
bool SetFogColor(int nPlugin, float fR, float fG, float fB);
int GetFogType(int nPlugin);
float GetFogNear(int nPlugin);
float GetFogFar(int nPlugin);
void GetFogColor(int nPlugin, ref float pfR, ref float pfG, ref float pfB);
bool SetSoftFogEdgeLength(int PluginNumber, float SoftFogEdgeLength);
float GetSoftFogEdgeLength(int PluginNumber);
bool SetEdgeLength(int PluginNumber, float EdgeLength);
float GetEdgeLength(int PluginNumber);
bool SetEdgeReductionRate(int PluginNumber, float EdgeReductionRate);
float GetEdgeReductionRate(int PluginNumber);
bool SetEdgeColor(int PluginNumber, float ColorR, float ColorG, float ColorB);
bool GetEdgeColor(int PluginNumber, ref float ColorR, ref float ColorG, ref float ColorB);
bool SetDrawTextureFog(int nPlugin, bool bDraw);
bool GetDrawTextureFog(int nPlugin);
bool SetViewport(int nPlugin, int nX, int nY, int nWidth, int nHeight);
bool SetProjection(int nPlugin, float fWidth, float fHeight, float fNear, float fFar, float fDeg);
float GetBrightness(int nPlugin);
bool SetBrightness(int nPlugin, float fBrightness);
bool SetRenderMode(int nPlugin, int nMode);
int GetRenderMode(int nPlugin);
bool SetDrawOption(int PluginNumber, int DrawOption, int Param);
int GetDrawOption(int PluginNumber, int DrawOption);
bool SetShadowMode(int nPlugin, int nMode);
bool SetBumpMode(int nPlugin, int nMode);
bool SetHDRMode(int nPlugin, int nMode);
bool SetFogMode(int nPlugin, int nMode);
bool SetSpecularMode(int nPlugin, int nMode);
bool SetLightMapMode(int nPlugin, int nMode);
bool SetSoftFogEdgeMode(int nPlugin, int nMode);
bool SetSSAOMode(int nPlugin, int nMode);
bool SetShaderPrecisionMode(int nPlugin, int nMode);
bool SetShaderDebugMode(int nPlugin, int nMode);
int GetShadowMode(int nPlugin);
int GetBumpMode(int nPlugin);
int GetHDRMode(int nPlugin);
int GetFogMode(int nPlugin);
int GetSpecularMode(int nPlugin);
int GetLightMapMode(int nPlugin);
int GetSoftFogEdgeMode(int nPlugin);
int GetSSAOMode(int nPlugin);
int GetShaderPrecisionMode(int nPlugin);
int GetShaderDebugMode(int nPlugin);
bool SetDebugMode(int Plugin, int DebugModeType, int Mode);
int GetDebugMode(int Plugin, int DebugModeType);
int GetTextureResolutionLevel(int nPlugin);
int GetTextureFilterMode(int nPlugin);
bool SetTextureResolutionLevel(int nPlugin, int nLevel);
bool SetTextureFilterMode(int nPlugin, int nMode);
bool GetUsePower2Texture(int nPlugin);
bool SetUsePower2Texture(int nPlugin, bool bUse);
bool GetGlobalAmbient(int nPlugin, ref float pfR, ref float pfG, ref float pfB);
bool SetGlobalAmbient(int nPlugin, float fR, float fG, float fB);
int GetBloomMode(int nPlugin);
bool SetBloomMode(int nPlugin, int nMode);
int GetGlareMode(int nPlugin);
bool SetGlareMode(int nPlugin, int nMode);
float GetPostEffectFilterY(int nPlugin);
float GetPostEffectFilterCb(int nPlugin);
float GetPostEffectFilterCr(int nPlugin);
bool SetPostEffectFilterY(int nPlugin, float fY);
bool SetPostEffectFilterCb(int nPlugin, float fCb);
bool SetPostEffectFilterCr(int nPlugin, float fCr);
bool GetBackCGName(int nPlugin, int nNum, ref string pICGName);
int GetBackCGNum(int nPlugin, int nNum);
float GetBackCGBlendRate(int nPlugin, int nNum);
float GetBackCGDestPosX(int nPlugin, int nNum);
float GetBackCGDestPosY(int nPlugin, int nNum);
float GetBackCGMag(int nPlugin, int nNum);
float GetBackCGQuakeMag(int nPlugin, int nNum);
bool GetBackCGShow(int nPlugin, int nNum);
bool SetBackCGName(int nPlugin, int nNum, string pICGName);
bool SetBackCGNum(int nPlugin, int nNum, int nCGNum);
bool SetBackCGBlendRate(int nPlugin, int nNum, float fBlendRate);
bool SetBackCGDestPos(int nPlugin, int nNum, float fX, float fY);
bool SetBackCGMag(int nPlugin, int nNum, float fMag);
bool SetBackCGQuakeMag(int nPlugin, int nNum, float fQuakeMag);
bool SetBackCGShow(int nPlugin, int nNum, bool bShow);
float GetGlareBrightnessParam(int nPlugin, int nIndex);
bool SetGlareBrightnessParam(int nPlugin, int nIndex, float fParam);
float GetSSAOParam(int nPlugin, int nType);
bool SetSSAOParam(int nPlugin, int nType, float fParam);
bool CalcIntersectEyeVec(int nPlugin, int nInstance, int nMouseX, int nMouseY, ref float pfX, ref float pfY, ref float pfZ);
bool Calc2DDetectionHeight(int PluginNumber, float X, float Z, ref float Height);
bool Calc2DDetection(int PluginNumber, float X0, float Y0, float Z0, float X1, float Y1, float Z1, float Radius, ref float X2, ref float Y2, ref float Z2);
bool Calc2DDetectionIntersectEyeVector(int PluginNumber, int ViewX, int ViewY, ref float X, ref float Y, ref float Z);
bool FindPath(int PluginNumber, float StartX, float StartY, float StartZ, float GoalX, float GoalY, float GoalZ);
bool GetPathLine(int PluginNumber, ref array@float pIXArray, ref array@float pIYArray, ref array@float pIZArray);
bool GetOptimizedPathLine(int PluginNumber, ref array@float pIXArray, ref array@float pIYArray, ref array@float pIZArray);
bool TransformPosToViewPos(int PluginNumber, float X, float Y, float Z, ref int ViewX, ref int ViewY);
bool IsLoading(int nPlugin);
bool SetInstanceSpecularReflectRate(int nPlugin, int nInstance, float fRate);
bool SetInstanceFresnelReflectRate(int nPlugin, int nInstance, float fRate);
float GetInstanceSpecularReflectRate(int nPlugin, int nInstance);
float GetInstanceFresnelReflectRate(int nPlugin, int nInstance);
float StringToFloat(string pIText);
bool ResetLightParam(int PluginNumber);
bool SetLightParam(int PluginNumber, int Type, float Value);
float GetLightParam(int PluginNumber, int Type);
bool SetThreadLoadingMode(int PluginNumber, bool ThreadLoadingMode);
bool IsThreadLoadingMode(int PluginNumber);
bool ClearCache(int PluginNumber);
bool Suspend(int PluginNumber);
bool IsSuspend(int PluginNumber);
bool Resume(int PluginNumber);
bool GetHistogram(int PluginNumber, ref array@int HistogramList);
bool DrawToMainSurface(int nPlugin);
int GetNumofInstance(int PluginNumber);
bool Tool_GetInstanceIntParam(int Param, int PluginNumber, int InstanceNumber, ref int Value);
bool Tool_SetInstanceIntParam(int Param, int PluginNumber, int InstanceNumber, int Value);
bool Tool_GetEmitterIntParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, ref int Value);
bool Tool_SetEmitterIntParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, int Value);
bool Tool_GetEmitterFloatParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, ref float Value);
bool Tool_SetEmitterFloatParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, float Value);
bool Tool_GetEmitterStringParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, ref string Value);
bool Tool_SetEmitterStringParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, string Value);
bool Tool_GetEmitterRandRangeParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, ref float Value);
bool Tool_SetEmitterRandRangeParam(int Param, int PluginNumber, int InstanceNumber, int EmitterNumber, int EmitterIndex, float Value);
bool Tool_Effect_AddEmitter(int PluginNumber, int InstanceNumber, int EmitterNumber);
bool Tool_Effect_CopyEmitter(int PluginNumber, int InstanceNumber, int DestEmitterNumber, int SrcEmitterNumber);
bool Tool_Effect_EraseEmitter(int PluginNumber, int InstanceNumber, int EmitterNumber);
bool Tool_DetectPlaneCollision(int PluginNumber, int MouseX, int MouseY, float PlanePosX, float PlanePosY, float PlanePosZ, float PlaneVectorX, float PlaneVectorY, float PlaneVectorZ, ref float CrossPosX, ref float CrossPosY, ref float CrossPosZ);
bool Tool_Effect_DetectEmitterPosCollision(int PluginNumber, int InstanceNumber, int MouseX, int MouseY, ref int pEmitterNumber, ref int pPosNumber, ref int pDetectAxis);
bool Tool_GetMeshIntParam(int Param, int PluginNumber, int InstanceNumber, int MeshNumber, ref int Value);
bool Tool_SetMeshIntParam(int Param, int PluginNumber, int InstanceNumber, int MeshNumber, int Value);
bool Tool_GetMeshFloatParam(int Param, int PluginNumber, int InstanceNumber, int MeshNumber, ref float Value);
bool Tool_SetMeshFloatParam(int Param, int PluginNumber, int InstanceNumber, int MeshNumber, float Value);
