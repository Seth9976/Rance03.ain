CAEPropertyListBox::CAEPropertyListBox()
{
	this.Init(0, NULL);
}

CAEPropertyListBox::~CAEPropertyListBox()
{
	this.Release();
}

void CAEPropertyListBox::Init(int LayoutID, ref CAEInstanceItem Item)
{
	this.Release();
	if (Item === NULL)
	{
		return;
	}
	this.m_Item <- Item;
	this.m_Panel.Init(LayoutID);
	this.m_Panel.AddKeyDownEvent(this.KeyDownEvent);
	this.m_Panel.AddMouseWheelEvent(this.MouseWheelEvent);
	this.m_Panel.AddChangeTextEvent(this.ChangeTextEvent);
	this.m_Panel.AddMouseClickEvent(this.MouseLClickEvent);
	int ID = this.m_Item.GetID();
	float 太字幅;
	float 縁取り幅;
	int 種類;
	int サイズ;
	int 赤;
	int 緑;
	int 青;
	int 縁取り赤;
	int 縁取り緑;
	int 縁取り青;
	Ｐ＿リストボックス＿フォント取得(ID, 種類, サイズ, 赤, 緑, 青, 太字幅, 縁取り赤, 縁取り緑, 縁取り青, 縁取り幅);
	this.m_Panel.AddTextBoxItem("幅", string(AFL_Parts_GetWidth(ID, 1)), false);
	this.m_Panel.AddTextBoxItem("高さ", string(AFL_Parts_GetHeight(ID, 1)), false);
	this.m_Panel.AddTextBoxItem("行高さ", string(Ｐ＿リストボックス＿行高さ取得(ID)), false);
	this.m_Panel.AddTextBoxItem("行マージン幅", string(Ｐ＿リストボックス＿行マージン幅取得(ID)), false);
	this.m_Panel.AddTextBoxItem("行マージン高さ", string(Ｐ＿リストボックス＿行マージン高さ取得(ID)), false);
	this.m_Panel.AddButtonItem("項目", "編集");
	this.m_Panel.AddTextBoxItem("ＣＧ名", Ｐ＿リストボックス＿ＣＧ名取得(ID), true);
	this.m_Panel.AddTextBoxItem("スクロール位置", string(Ｐ＿リストボックス＿スクロール位置取得(ID)), false);
	this.m_Panel.AddButtonItem("フォント", "%s, サイズ[%d]" % PARTS_GetFontName(種類) % サイズ);
	this.m_Panel.AddTextBoxItem("選択位置", string(Ｐ＿リストボックス＿選択位置取得(ID)), false);
}

void CAEPropertyListBox::Release()
{
	this.m_dgMouseWheelEvent.Clear();
	this.m_dgKeyDownEvent.Clear();
	this.m_Item <- NULL;
	this.m_Panel.Release();
}

void CAEPropertyListBox::KeyDownEvent(int ID, int KeyID)
{
	this.m_dgKeyDownEvent(ID, KeyID);
}

void CAEPropertyListBox::MouseWheelEvent(int ID, int Forward, int Back)
{
	this.m_dgMouseWheelEvent(ID, Forward, Back);
}

void CAEPropertyListBox::ChangeTextEvent(int ID)
{
	ref CAEPropertyItem Item = this.m_Panel.GetItem(ID);
	if (Item === NULL)
	{
		return;
	}
	int PartsID = this.m_Item.GetID();
	if (Item.GetLabel() == "幅")
	{
		Ｐ＿リストボックス＿サイズ設定(PartsID, Item.GetTextBoxInt(), AFL_Parts_GetHeight(PartsID, 1));
	}
	else if (Item.GetLabel() == "高さ")
	{
		Ｐ＿リストボックス＿サイズ設定(PartsID, AFL_Parts_GetWidth(PartsID, 1), Item.GetTextBoxInt());
	}
	else if (Item.GetLabel() == "行高さ")
	{
		Ｐ＿リストボックス＿行高さ設定(PartsID, Item.GetTextBoxInt());
	}
	else if (Item.GetLabel() == "行マージン幅")
	{
		Ｐ＿リストボックス＿行マージン設定(PartsID, Item.GetTextBoxInt(), Ｐ＿リストボックス＿行マージン高さ取得(PartsID));
	}
	else if (Item.GetLabel() == "行マージン高さ")
	{
		Ｐ＿リストボックス＿行マージン設定(PartsID, Ｐ＿リストボックス＿行マージン幅取得(PartsID), Item.GetTextBoxInt());
	}
	else if (Item.GetLabel() == "ＣＧ名")
	{
		Ｐ＿リストボックス＿ＣＧ名設定(PartsID, Item.GetTextBoxText());
	}
	else if (Item.GetLabel() == "スクロール位置")
	{
		Ｐ＿リストボックス＿スクロール位置設定(PartsID, Item.GetTextBoxInt());
	}
	else if (Item.GetLabel() == "選択位置")
	{
		Ｐ＿リストボックス＿選択位置設定(PartsID, Item.GetTextBoxInt());
	}
}

void CAEPropertyListBox::MouseLClickEvent(int ID, int MouseX, int MouseY)
{
	ref CAEPropertyItem Item = this.m_Panel.GetItem(ID);
	if (Item === NULL)
	{
		return;
	}
	int PartsID = this.m_Item.GetID();
	if (Item.GetLabel() == "項目")
	{
		CAEEditTextListListDialog Form;
		array@string ItemList;
		int Index;
		int Numof = Ｐ＿リストボックス＿アイテム数取得(PartsID);
		for (Index = 0; Index < Numof; ++Index)
		{
			ItemList.PushBack(Ｐ＿リストボックス＿アイテム取得(PartsID, Index));
		}
		Form.Show(ID, MouseX, MouseY, ItemList, this.ChangedItemListEvent);
	}
	else if (Item.GetLabel() == "フォント")
	{
		float 太字幅;
		float 縁取り幅;
		int 種類;
		int サイズ;
		int 赤;
		int 緑;
		int 青;
		int 縁取り赤;
		int 縁取り緑;
		int 縁取り青;
		Ｐ＿リストボックス＿フォント取得(PartsID, 種類, サイズ, 赤, 緑, 青, 太字幅, 縁取り赤, 縁取り緑, 縁取り青, 縁取り幅);
		CASCharSpriteProperty Font;
		Font.SetType(種類);
		Font.SetSize(サイズ);
		Font.SetColor(CF_CASColor(赤, 緑, 青, 255));
		Font.SetBoldWeight(太字幅);
		Font.SetEdgeWeight(縁取り幅);
		Font.SetEdgeColor(CF_CASColor(縁取り赤, 縁取り緑, 縁取り青, 255));
		CAESelectFontDialog Form;
		Form.Show(ID, MouseX, MouseY, Font, this.ChangedFontEvent);
	}
}

void CAEPropertyListBox::ChangedFontEvent(int ID, ref CASCharSpriteProperty Font)
{
	ref CAEPropertyItem Item = this.m_Panel.GetItem(ID);
	if (Item === NULL)
	{
		return;
	}
	int PartsID = this.m_Item.GetID();
	CASColor Color;
	Color = Font.GetColor();
	CASColor EdgeColor;
	EdgeColor = Font.GetEdgeColor();
	if (Item.GetLabel() == "フォント")
	{
		Ｐ＿リストボックス＿フォント設定(PartsID, Font.GetType(), Font.GetSize(), Color.GetR(), Color.GetG(), Color.GetB(), Font.GetBoldWeight(), EdgeColor.GetR(), EdgeColor.GetG(), EdgeColor.GetB(), Font.GetEdgeWeight());
		Item.SetButtonText("%s, サイズ[%d]" % PARTS_GetFontName(Font.GetType()) % Font.GetSize());
	}
}

void CAEPropertyListBox::ChangedItemListEvent(int ID, ref array@string List)
{
	ref CAEPropertyItem Item = this.m_Panel.GetItem(ID);
	if (Item === NULL)
	{
		return;
	}
	int PartsID = this.m_Item.GetID();
	if (Item.GetLabel() == "項目")
	{
		Ｐ＿リストボックス＿アイテム全削除(PartsID);
		int Index;
		for (Index = 0; Index < List.Numof(); ++Index)
		{
			Ｐ＿リストボックス＿アイテム追加(PartsID, List[Index]);
		}
	}
}

void CAEPropertyListBox::AddKeyDownEvent(DG_KeyDownHandler DelegateObject)
{
	this.m_dgKeyDownEvent += DelegateObject;
}

void CAEPropertyListBox::EraseKeyDownEvent(DG_KeyDownHandler DelegateObject)
{
	this.m_dgKeyDownEvent -= DelegateObject;
}

void CAEPropertyListBox::AddMouseWheelEvent(DG_MouseWheelHandler DelegateObject)
{
	this.m_dgMouseWheelEvent += DelegateObject;
}

void CAEPropertyListBox::EraseMouseWheelEvent(DG_MouseWheelHandler DelegateObject)
{
	this.m_dgMouseWheelEvent -= DelegateObject;
}

